{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\flyma\\\\Documents\\\\Week 13\\\\build-a-formik-form_starter\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useFormik } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const formik = useFormik({\n    initialValues: {\n      emailField: '',\n      pswField: ''\n    },\n    onSubmit: values => {\n      alert('Login Successful');\n      console.log('form: ', values);\n    },\n    validate: values => {\n      let errors = {};\n\n      if (!values.emailField) {\n        errors.emailField = 'Field required';\n      } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.emailField)) {\n        errors.emailField = 'Username should be an email';\n      }\n\n      if (!values.pswField) errors.pswField = 'Field required';\n      return errors;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"emailField\",\n        id: \"emailField\",\n        onChange: formik.handleChange,\n        value: formik.values.emailField\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), formik.errors.emailField ? /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"emailError\",\n        style: {\n          color: 'red'\n        },\n        children: formik.errors.emailField\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 37\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"pswField\",\n        name: \"pswField\",\n        onChange: formik.handleChange,\n        value: formik.values.pswField\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), formik.errors.pswField ? /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"pswError\",\n        style: {\n          color: 'red'\n        },\n        children: formik.errors.pswField\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 35\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"submitBtn\",\n        name: \"submitBtn\",\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/flyma/Documents/Week 13/build-a-formik-form_starter/src/App.js"],"names":["React","useFormik","App","formik","initialValues","emailField","pswField","onSubmit","values","alert","console","log","validate","errors","test","handleSubmit","handleChange","color"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,QAAwB,QAAxB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,MAAM,GAAGF,SAAS,CAAC;AACvBG,IAAAA,aAAa,EAAE;AACbC,MAAAA,UAAU,EAAE,EADC;AAEbC,MAAAA,QAAQ,EAAE;AAFG,KADQ;AAKvBC,IAAAA,QAAQ,EAAEC,MAAM,IAAG;AACjBC,MAAAA,KAAK,CAAC,kBAAD,CAAL;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBH,MAAtB;AACD,KARsB;AASvBI,IAAAA,QAAQ,EAAEJ,MAAM,IAAG;AACjB,UAAIK,MAAM,GAAG,EAAb;;AACA,UAAG,CAACL,MAAM,CAACH,UAAX,EAAuB;AACrBQ,QAAAA,MAAM,CAACR,UAAP,GAAoB,gBAApB;AACD,OAFD,MAEO,IAAI,CAAC,4CAA4CS,IAA5C,CAAiDN,MAAM,CAACH,UAAxD,CAAL,EAAyE;AAC9EQ,QAAAA,MAAM,CAACR,UAAP,GAAoB,6BAApB;AACD;;AACD,UAAG,CAACG,MAAM,CAACF,QAAX,EAAqBO,MAAM,CAACP,QAAP,GAAkB,gBAAlB;AACrB,aAAOO,MAAP;AACD;AAlBsB,GAAD,CAAxB;AAqBA,sBACE;AAAA,2BACE;AAAM,MAAA,QAAQ,EAAEV,MAAM,CAACY,YAAvB;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,YAAxB;AAAqC,QAAA,EAAE,EAAC,YAAxC;AAAqD,QAAA,QAAQ,EAAEZ,MAAM,CAACa,YAAtE;AAAoF,QAAA,KAAK,EAAEb,MAAM,CAACK,MAAP,CAAcH;AAAzG;AAAA;AAAA;AAAA;AAAA,cAFF,EAGGF,MAAM,CAACU,MAAP,CAAcR,UAAd,gBAA2B;AAAK,QAAA,EAAE,EAAC,YAAR;AAAqB,QAAA,KAAK,EAAE;AAACY,UAAAA,KAAK,EAAE;AAAR,SAA5B;AAAA,kBAA6Cd,MAAM,CAACU,MAAP,CAAcR;AAA3D;AAAA;AAAA;AAAA;AAAA,cAA3B,GAA0G,IAH7G,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,EAAE,EAAC,UAAtB;AAAiC,QAAA,IAAI,EAAC,UAAtC;AAAiD,QAAA,QAAQ,EAAEF,MAAM,CAACa,YAAlE;AAAgF,QAAA,KAAK,EAAEb,MAAM,CAACK,MAAP,CAAcF;AAArG;AAAA;AAAA;AAAA;AAAA,cALF,EAMGH,MAAM,CAACU,MAAP,CAAcP,QAAd,gBAAyB;AAAK,QAAA,EAAE,EAAC,UAAR;AAAmB,QAAA,KAAK,EAAE;AAACW,UAAAA,KAAK,EAAE;AAAR,SAA1B;AAAA,kBAA2Cd,MAAM,CAACU,MAAP,CAAcP;AAAzD;AAAA;AAAA;AAAA;AAAA,cAAzB,GAAoG,IANvG,eAOE;AAAA;AAAA;AAAA;AAAA,cAPF,eAQE;AAAQ,QAAA,EAAE,EAAC,WAAX;AAAuB,QAAA,IAAI,EAAC,WAA5B;AAAwC,QAAA,IAAI,EAAC,QAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GApCQJ,G;UACQD,S;;;KADRC,G;AAsCT,eAAeA,GAAf","sourcesContent":["import React from \"react\";\nimport {useFormik} from 'formik'\n\nfunction App() {\n  const formik = useFormik({\n    initialValues: {\n      emailField: '',\n      pswField: ''\n    },\n    onSubmit: values =>{\n      alert('Login Successful')\n      console.log('form: ', values);\n    },\n    validate: values =>{\n      let errors = {};\n      if(!values.emailField) {\n        errors.emailField = 'Field required';\n      } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.emailField)){\n        errors.emailField = 'Username should be an email';\n      }\n      if(!values.pswField) errors.pswField = 'Field required';\n      return errors\n    }\n  });\n\n  return (\n    <div>\n      <form onSubmit={formik.handleSubmit}>\n        <div>Email:</div>\n        <input type=\"text\" name=\"emailField\" id=\"emailField\" onChange={formik.handleChange} value={formik.values.emailField}></input>\n        {formik.errors.emailField ? <div id=\"emailError\" style={{color: 'red'}}>{formik.errors.emailField}</div> : null}\n        <div>Password</div>\n        <input type=\"text\" id=\"pswField\" name=\"pswField\" onChange={formik.handleChange} value={formik.values.pswField}></input>\n        {formik.errors.pswField ? <div id=\"pswError\" style={{color: 'red'}}>{formik.errors.pswField}</div> : null}\n        <br></br>\n        <button id=\"submitBtn\" name=\"submitBtn\" type=\"submit\">Submit</button>\n      </form>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}